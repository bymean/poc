{"version":3,"sources":["components/molecules/grid/HIRAGrid.jsx","components/templates/layout/layout.jsx","components/templates/layout/footer.jsx","pages/sampleGrid.jsx","components/molecules/form/SearchForm.jsx","pages/sampleBoard.jsx","Routes.js","App.js","serviceWorker.js","index.js"],"names":["HIRAGrid","props","useState","isSpinLoading","minHeight","onSetGrid","useEffect","spinning","tip","className","style","ReactDataGrid","headerRowHeight","ref","defaultProps","GlobalLayout","children","Footer","Form","create","grid","form","collapsed","setCollapsed","getFieldDecorator","formItemLayout","Menu","SubMenu","labelCol","span","wrapperCol","colon","OneItemLayout","defaultColumnProperties","resizable","columns","key","name","map","c","rows","id","1","2","3","4","5","6","7","onChgDate","date","dateString","console","log","Sider","trigger","collapsible","href","class","theme","mode","defaultSelectedKeys","Item","to","type","Header","onClick","Content","gutter","xs","md","label","rules","required","message","defaultValue","placeholder","Option","value","Search","onSearch","htmlType","rowsCount","length","onChange","Group","TextArea","autoSize","Dragger","multiple","setTransForm","searchBtnClick","isTransCheck","setIsTransCheck","onPressEnter","gridData","setGridData","gridLoading","setGridLoading","isStart","setIsStart","searchForm","setSearchForm","Input","axiosConfig","headers","handleLoading","isLoading","formatter","cell","row","RN","width","WRITER","WRITE_DATE","getList","a","parmKeyword","searchParam","getFieldsValue","keyword","undefined","err","params","axios","post","then","res","catch","error","resultList","data","viewDetail","boardIdx","result","setFieldsValue","handleSubmit","body","B_IDX","SUBJECT","REMARK","isClass","onRowClick","rowIdx","e","enableCellAutoFocus","emptyRowsView","textAlign","paddingTop","GRID_HEIGHT","color","onGridSort","sortColumn","sortDirection","initialRows","sort","b","sortRows","maxLength","initialValue","path","component","sampleBoard","sampleGrid","App","Routes","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1f8fa053.chunk.js","sourcesContent":["/**\r\n * 시스템명 :  표준 템플릿\r\n * 업무명 : -\r\n * 파일명 : HIRAGrid.jsx\r\n * @author 김우곤\r\n * @version 0.1\r\n * @since  2019.12.16\r\n * @description  표준 테이블 컴포넌트\r\n * 무한 스크롤 적용 시 세로 스크롤이 나오도록 테이블의 높이를 조정해야 함\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react'; // REACT 기본 및 USESTATE 선언부\r\nimport PropsType from 'prop-types';\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport { Spin } from 'antd';\r\n\r\nconst HIRAGrid = props => {\r\n  // 그리드 import 로딩바\r\n  const [isSpinLoading, setIsSpinLoading] = useState(false);\r\n  const { minHeight, onSetGrid } = props;\r\n\r\n  // lifecycle\r\n  useEffect(() => {\r\n    // if (process.browser) {\r\n    //   // eslint-disable-next-line global-require\r\n    //   ReactDataGrid = require('react-data-grid');\r\n    //   setIsSpinLoading(false);\r\n    // }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Spin spinning={isSpinLoading} tip=\"Loading...\">\r\n        <div className=\"ant-table-wrapper\" style={{ minHeight: `${isSpinLoading ? `${minHeight}px` : '0'}` }} />\r\n      </Spin>\r\n      {ReactDataGrid && (\r\n        <ReactDataGrid\r\n          headerRowHeight={44}\r\n          ref={ref => {\r\n            if (onSetGrid) {\r\n              onSetGrid(ref);\r\n            }\r\n          }}\r\n          {...props}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nHIRAGrid.propTypes = {\r\n  minHeight: PropsType.number,\r\n  onSetGrid: PropsType.func\r\n};\r\n\r\nHIRAGrid.defaultProps = {\r\n  minHeight: null,\r\n  onSetGrid: null\r\n};\r\n\r\nexport default HIRAGrid;\r\n","import React from 'react';\r\nimport { Layout } from 'antd';\r\n\r\nconst GlobalLayout = props => {\r\n  const { children } = props;\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        {children}\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GlobalLayout;\r\n","/**\r\n * 시스템명 : Tamplate Layout > Footer\r\n * 업무명 :\r\n * 파일명 : footer.js\r\n * 작성자 :  문병호\r\n * 작성일 :  2020.04.16\r\n *\r\n * 설  명 :  Tamplate Layout > Footer\r\n *---------------------------------------------------------------------------------------\r\n *  변경일     변경자  변경내역\r\n *---------------------------------------------------------------------------------------\r\n * 2020.04.16  문병호 최초 프로그램 작성\r\n *---------------------------------------------------------------------------------------\r\n */\r\n\r\nimport React from 'react';\r\nimport { Layout } from 'antd';\r\n\r\nconst Footer = () => {\r\n\r\n  return (\r\n    <>\r\n      <Layout.Footer className=\"footer\">\r\n      Copyright © 2020 Ubstory. All Rights Reserved.\r\n      </Layout.Footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport axios from 'axios';\r\nimport { Layout, Row, Col, Menu, Icon, Form, Input, Select, Button, DatePicker, Radio, Upload, message } from 'antd';\r\nimport { MailOutlined } from '@ant-design/icons';\r\nimport HIRAGrid from '../components/molecules/grid/HIRAGrid';\r\n\r\nimport Wrapper from '../components/templates/layout/layout';\r\nimport Footer from '../components/templates/layout/footer';\r\n\r\nimport 'react-data-grid/dist/react-data-grid.css';\r\n\r\nconst GridSample = ({form}) => {\r\n  let grid; /* 그리드 선언 */\r\n  const [gridData, setGridData] = useState([]);\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const { getFieldDecorator } = form;\r\n  const { SubMenu } = Menu;\r\n  const formItemLayout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n    colon: false,\r\n  };\r\n  const OneItemLayout = {\r\n    labelCol: { span: 3 },\r\n    wrapperCol: { span: 21 },\r\n  };\r\n  const TwoItemLayout = {\r\n    labelCol: { span: 4 },\r\n    wrapperCol: { span: 20 },\r\n  };\r\n\r\n  // 그리드 기본 프로퍼티스\r\n  const defaultColumnProperties = {\r\n    resizable: true\r\n  };\r\n  \r\n  // 그리드 ref 세팅\r\n  const handleSetGrid = ref => {\r\n    if (!grid) {\r\n      grid = ref;\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    { key: '1', name: 'No' },\r\n    { key: '2', name: '신청구분' },\r\n    { key: '3', name: '신청일자' },\r\n    { key: '4', name: '해지일자' },\r\n    { key: '5', name: '승인일자' },\r\n    { key: '6', name: '변경 및 해지사유' },\r\n    { key: '7', name: '진행상태' }\r\n  ].map(c => ({ ...c, ...defaultColumnProperties }));\r\n  \r\n  const rows = [\r\n    { id: 0, 1: \"3\", 2: \"출산장려금\", 3: \"2020-04-13\", 4: \"2020-04-13\", 5: \"2019-10-01\", 6: \"-\", 7: \"진행중\" },\r\n    { id: 1, 1: \"2\", 2: \"출산장려금\", 3: \"2020-04-04\", 4: \"2020-04-13\", 5: \"2019-10-01\", 6: \"\", 7: \"접수\" },\r\n    { id: 2, 1: \"1\", 2: \"출산장려금\", 3: \"2020-03-31\", 4: \"2020-04-13\", 5: \"2019-10-01\", 6: \"\", 7: \"완료\" }\r\n  ];\r\n  \r\n  const fileInfo = {\r\n    name: 'file',\r\n    multiple: true,\r\n    // action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n    // onChange(info) {\r\n    //   const { status } = info.file;\r\n    //   if (status !== 'uploading') {\r\n    //     console.log(info.file, info.fileList);\r\n    //   }\r\n    //   if (status === 'done') {\r\n    //     message.success(`${info.file.name} file uploaded successfully.`);\r\n    //   } else if (status === 'error') {\r\n    //     message.error(`${info.file.name} file upload failed.`);\r\n    //   }\r\n    // },\r\n  };\r\n\r\n  const onChgDate = (date, dateString) => {\r\n    console.log(date, dateString);\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    console.log('handleSubmit');\r\n  }\r\n\r\n  const toggle = () => {\r\n    setCollapsed(!collapsed);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // getList();\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Layout.Sider className=\"sider\" trigger={null} collapsible collapsed={collapsed}>\r\n        <h1 className=\"logo\">\r\n          <a href=\"#\"><i>s</i><span>SampleGrid</span></a>\r\n        </h1>\r\n        <h2 class=\"sr-only\">네비게이션</h2>\r\n        <Menu className=\"menu\" theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n          <Menu.Item key=\"5\">\r\n            <Link to=\"/sampleBoard\">\r\n              <Icon type=\"user\" />\r\n              <span>게시판</span>\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"6\">\r\n            <Link to=\"/sampleGrid\">\r\n              <Icon type=\"video-camera\" />\r\n              <span>자격신고내역</span>\r\n            </Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Layout.Sider>\r\n      <Layout>\r\n        <Layout.Header class=\"header\">\r\n          <Icon \r\n            className=\"trigger\"\r\n            type={collapsed ? 'menu-unfold' : 'menu'}\r\n            // type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\r\n            onClick={toggle}\r\n          />\r\n          <div className=\"etc-menu d-none d-lg-inline-block\">\r\n            <span>이 프로그램은 참고용으로 제작한 템플릿입니다.</span>\r\n          </div>\r\n        </Layout.Header>\r\n        <Layout.Content className=\"contents\">\r\n          <Form {...formItemLayout} className=\"search-form mb-35\">\r\n            <Row gutter={20} type=\"flex\">\r\n              <Col xs={20}>\r\n                <Row gutter={20}>\r\n                  <Col xs={24} md={8}>\r\n                    <Form.Item label=\"신청구분\">\r\n                      {getFieldDecorator('gubun', {\r\n                        rules: [{ required: false, message: '' }],\r\n                      })(\r\n                        <Select\r\n                          defaultValue=\"1\"\r\n                          placeholder=\"전체\"\r\n                        >\r\n                          <Select.Option value=\"1\">전체</Select.Option>\r\n                          <Select.Option value=\"2\">접수</Select.Option>\r\n                          <Select.Option value=\"3\">진행중</Select.Option>\r\n                          <Select.Option value=\"4\">완료</Select.Option>\r\n                        </Select>,\r\n                      )}\r\n                    </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={8}>\r\n                      <Form.Item label=\"진행상태\">\r\n                        {getFieldDecorator('status', {\r\n                          rules: [{ required: false, message: '' }],\r\n                        })(\r\n                          <Select\r\n                            defaultValue=\"1\"\r\n                            placeholder=\"전체\"\r\n                          >\r\n                            <Select.Option value=\"1\">전체</Select.Option>\r\n                            <Select.Option value=\"2\">접수</Select.Option>\r\n                            <Select.Option value=\"3\">진행중</Select.Option>\r\n                            <Select.Option value=\"4\">완료</Select.Option>\r\n                          </Select>,\r\n                        )}\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={8}>\r\n                      <Form.Item {...formItemLayout} label=\"성명\">\r\n                        {getFieldDecorator('username', {\r\n                          rules: [\r\n                            {\r\n                              required: false,\r\n                              message: '',\r\n                            },\r\n                          ],\r\n                        })(\r\n                          <Row gutter={12}>\r\n                            <Col xs={10}>\r\n                              <Input.Search\r\n                                // placeholder=\"input search text\" \r\n                                defaultValue=\"\"\r\n                                onSearch={value => console.log(value)}\r\n                              />\r\n                            </Col>\r\n                            <Col xs={14}>\r\n                              <Input defaultValue=\"\" />\r\n                            </Col>\r\n                          </Row>\r\n                        )}\r\n                      </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              <Col xs={4} className=\"text-right\">\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"mt-5\">\r\n                  조회\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n\r\n          <h3>직장피부양자 자격신고 내역</h3>\r\n          <HIRAGrid\r\n            columns={columns}\r\n            rows={rows}\r\n            rowsCount={rows.length}\r\n            onSetGrid={handleSetGrid}\r\n          />\r\n\r\n          <h3 className=\"mt-35\">직장피부양자 자격신고</h3>\r\n          <Form {...formItemLayout} className=\"wrap-form\">\r\n            <Row gutter={20}>\r\n              <Col xs={24} md={8}>\r\n                <Form.Item label=\"신청구분\">\r\n                  {getFieldDecorator('txtGubun', {\r\n                    rules: [{ required: true, message: '' }],\r\n                  })(\r\n                    <Select\r\n                      defaultValue=\"1\"\r\n                      placeholder=\"전체\"\r\n                    >\r\n                      <Select.Option value=\"1\">전체</Select.Option>\r\n                      <Select.Option value=\"2\">접수</Select.Option>\r\n                      <Select.Option value=\"3\">진행중</Select.Option>\r\n                      <Select.Option value=\"4\">완료</Select.Option>\r\n                    </Select>,\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={8}>\r\n                <Form.Item label=\"해지일자\">\r\n                  {getFieldDecorator('txtDate1', {\r\n                    rules: [{ required: false, message: '' }],\r\n                  })(\r\n                    <DatePicker onChange={onChgDate} />,\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={8}>\r\n                <Form.Item label=\"신청일자\">\r\n                  {getFieldDecorator('txtDate2', {\r\n                    rules: [{ required: false, message: '' }],\r\n                  })(\r\n                    <DatePicker onChange={onChgDate} />,\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={8}>\r\n                <Form.Item label=\"진행상태\">\r\n                  {getFieldDecorator('txtStatus', {\r\n                    rules: [{ required: false, message: '' }],\r\n                  })(\r\n                    <Select\r\n                      defaultValue=\"1\"\r\n                      placeholder=\"전체\"\r\n                    >\r\n                      <Select.Option value=\"1\">전체</Select.Option>\r\n                      <Select.Option value=\"2\">접수</Select.Option>\r\n                      <Select.Option value=\"3\">진행중</Select.Option>\r\n                      <Select.Option value=\"4\">완료</Select.Option>\r\n                    </Select>,\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={8}>\r\n                <Form.Item label=\"단축근무신청여부\">\r\n                  {getFieldDecorator('txtReqWork', {\r\n                    rules: [{ required: false, message: '' }],\r\n                  })(\r\n                    <Input defaultValue=\"\" />,\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={8}>\r\n                <Form.Item label=\"승인일자\">\r\n                  {getFieldDecorator('txtDate3', {\r\n                    rules: [{ required: false, message: '' }],\r\n                  })(\r\n                    <DatePicker onChange={onChgDate} />,\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={8}>\r\n                <Form.Item label=\"태아구분\">\r\n                  {getFieldDecorator('txtTheme', {\r\n                    rules: [{ required: false, message: '' }],\r\n                  })(\r\n                    <Radio.Group>\r\n                      <Radio value=\"a\">일태아</Radio>\r\n                      <Radio value=\"b\">다태아</Radio>\r\n                    </Radio.Group>,\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={16}>\r\n                <Form.Item label=\"임산부 편의용품신청여부\" {...TwoItemLayout}>\r\n                  {getFieldDecorator('txtOffice', {\r\n                    rules: [{ required: false, message: '' }],\r\n                  })(\r\n                    <Radio.Group>\r\n                      <Radio value=\"Y\">Y</Radio>\r\n                      <Radio value=\"N\">N</Radio>\r\n                    </Radio.Group>,\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={8}>\r\n                <Form.Item label=\"출산예정일\">\r\n                  {getFieldDecorator('txtDate4', {\r\n                    rules: [{ required: true, message: '' }],\r\n                  })(\r\n                    <DatePicker onChange={onChgDate} />,\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={8}>\r\n                <Form.Item label=\"기준일자(12주)\">\r\n                  {getFieldDecorator('txtDate5', {\r\n                    rules: [{ required: false, message: '' }],\r\n                  })(\r\n                    <DatePicker onChange={onChgDate} />,\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={8}>\r\n                <Form.Item label=\"기준일자(36주)\">\r\n                  {getFieldDecorator('txtDate6', {\r\n                    rules: [{ required: false, message: '' }],\r\n                  })(\r\n                    <DatePicker onChange={onChgDate} />,\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24}>\r\n                <Form.Item label=\"변경 및 해지사유\" {...OneItemLayout} className=\"one-item\">\r\n                  {getFieldDecorator('txtReason', {\r\n                    rules: [{ required: false, message: '' }],\r\n                  })(\r\n                    <Input.TextArea placeholder=\"변경 및 해지사유를 입력해주세요.\" autoSize />,\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24}>\r\n                <Form.Item label=\"반려사유\" {...OneItemLayout} className=\"one-item\">\r\n                  {getFieldDecorator('txtReason2', {\r\n                    rules: [{ required: false, message: '' }],\r\n                  })(\r\n                    <Input.TextArea placeholder=\"반려사유를 입력해주세요.\" autoSize />,\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24}>\r\n                <Form.Item label=\"첨부파일\" {...OneItemLayout} className=\"one-item\">\r\n                  {getFieldDecorator('txtFile', {\r\n                    rules: [{ required: false, message: '' }],\r\n                  })(\r\n                    <Upload.Dragger {...fileInfo} className=\"d-block mt-5\">\r\n                      <p className=\"ant-upload-drag-icon\">\r\n                        <Icon type=\"inbox\" /> 파일을 마우스로 끌어놓으세요.\r\n                      </p>\r\n                      <p className=\"ant-upload-text\">제출서류 : 출산 전 진료비 지원 신청 및 임신확인서, 임신진단서 등</p>\r\n                      <p className=\"ant-upload-hint\">※ 위 서류를 스캔한 파일(pdf, jpg, bmp, hwp 형식)을 첨부하시기 바랍니다.</p>\r\n                    </Upload.Dragger>,\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} className=\"text-right btn-area pt-20 pr-20\">\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  승인요청\r\n                </Button>\r\n                <Button htmlType=\"submit\">\r\n                  등록\r\n                </Button>\r\n                <Button type=\"danger\" htmlType=\"submit\">\r\n                  삭제\r\n                </Button>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  저장\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Layout.Content>\r\n        <Footer/>\r\n      </Layout>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default (Form.create()(GridSample));\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport { Row, Col, Form, Input, Button } from 'antd';\r\n\r\nconst SearchForm = ({ form, setTransForm, searchBtnClick }) => {\r\n  const { getFieldDecorator } = form;\r\n  const [isTransCheck, setIsTransCheck] = useState(true); /* 부모창으로 form Data 넘길때 체크 */\r\n\r\n  const formItemLayout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n    colon: false,\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isTransCheck) {\r\n      setTransForm(form);\r\n      setIsTransCheck(false);\r\n    }\r\n  }, [isTransCheck, setTransForm]);\r\n\r\n  return (\r\n    <Form {...formItemLayout} className=\"search-form mb-35\">\r\n      <Row gutter={20} type=\"flex\">\r\n        <Col xs={24}>\r\n          <Row gutter={20}>\r\n            <Col xs={14}>\r\n            </Col>\r\n            <Col xs={8} className=\"text-right\">\r\n              <Form.Item {...formItemLayout} label=\"제목\">\r\n                {getFieldDecorator('keyword', {\r\n                  rules: [\r\n                    {\r\n                      required: false,\r\n                      message: '',\r\n                    },\r\n                  ],\r\n                })(\r\n                  <Input\r\n                    defaultValue={''}\r\n                    value={''}\r\n                    onPressEnter={searchBtnClick}\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={2} className=\"text-right\">\r\n              <Button type=\"primary\" htmlType=\"submit\" className=\"mt-5\" onClick={searchBtnClick}>\r\n                조회\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Form.create()(SearchForm);\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport axios from 'axios';\r\nimport { Layout, Row, Col, Menu, Icon, Form, Input, Select, Button, DatePicker, Radio, Upload, Spin, message } from 'antd';\r\nimport { MailOutlined } from '@ant-design/icons';\r\n\r\nimport SearchForm from '../components/molecules/form/SearchForm';\r\nimport HIRAGrid from '../components/molecules/grid/HIRAGrid';\r\n// impor addons from 'react-data-grid-addons';\r\nimport Wrapper from '../components/templates/layout/layout';\r\nimport Footer from '../components/templates/layout/footer';\r\nimport 'react-data-grid/dist/react-data-grid.css';\r\n\r\nconst BoardSample = ({form}) => {\r\n  let grid; /* 그리드 선언 */\r\n  const GRID_HEIGHT = 296; /* 그리드 높이 */\r\n  // 그리드 기본 프로퍼티스\r\n  const defaultColumnProperties = {\r\n    resizable: true\r\n  };\r\n\r\n  // 그리드 데이터 값\r\n  const [gridData, setGridData] = useState([]);\r\n  // 그리드 로딩\r\n  const [gridLoading, setGridLoading] = useState(false);\r\n  // 그리드 시작 여부 판단\r\n  const [isStart, setIsStart] = useState(false);\r\n\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const [searchForm, setSearchForm] = useState({}); /** 검색폼 */\r\n\r\n  const { getFieldDecorator } = form;\r\n  const { SubMenu } = Menu;\r\n  const { TextArea } = Input;\r\n\r\n  const formItemLayout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n    colon: false,\r\n  };\r\n  const OneItemLayout = {\r\n    labelCol: { span: 3 },\r\n    wrapperCol: { span: 21 },\r\n  };\r\n  const TwoItemLayout = {\r\n    labelCol: { span: 4 },\r\n    wrapperCol: { span: 20 },\r\n  };\r\n\r\n  const axiosConfig = {\r\n    headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\r\n    }\r\n  };\r\n\r\n  // 그리드 로딩 view\r\n  const LoadingRowsView = () => {\r\n    return (\r\n      <div style={{ textAlign: 'center', paddingTop: GRID_HEIGHT / 2 - 40 }}>\r\n        <Spin spinning={gridLoading} isClass={false}>\r\n          {' '}\r\n        </Spin>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // 그리드 데이터 없음 view\r\n  const EmptyRowsView = () => {\r\n    return (\r\n      <div style={{ textAlign: 'center', paddingTop: GRID_HEIGHT / 2 - 70 }}>\r\n        <div className=\"ant-empty ant-empty-normal\">\r\n          <div className=\"ant-empty-image\">\r\n            {/* <img src=\"../resource/img/img_nodata.svg\" alt='no data' /> */}\r\n          </div>\r\n          <p className=\"ant-empty-description\" style={{color:'#fff'}}>no data</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  // 그리드 정렬\r\n  // eslint-disable-next-line consistent-return\r\n  const sortRows = (initialRows, sortColumn, sortDirection) => rows => {\r\n    try {\r\n      const comparer = (a, b) => {\r\n        if (sortDirection === 'ASC') {\r\n          return a[sortColumn] > b[sortColumn] ? 1 : -1;\r\n        }\r\n\r\n        if (sortDirection === 'DESC') {\r\n          return a[sortColumn] < b[sortColumn] ? 1 : -1;\r\n        }\r\n\r\n        return 1;\r\n      };\r\n      return sortDirection === 'NONE' ? initialRows : [...rows].sort(comparer);\r\n    } catch (err) {\r\n      // sendError(constants.KSD_ERROR.EV, err);\r\n    }\r\n  };\r\n  \r\n  // 그리드 cell 선택 이벤트\r\n  const onCellSelected = (rowIdx) => {\r\n    try {\r\n      // const rows = document.getElementsByClassName('react-grid-Row');\r\n      // rows.forEach(e => e.classList.remove('table-row-selected'));\r\n      // rows[rowIdx].classList.add('table-row-selected');\r\n\r\n      // setSecnCd(trim(gridData[rowIdx].secnCd));\r\n      viewDetail(gridData[rowIdx].B_IDX);\r\n    }\r\n    catch(e){\r\n\r\n    }\r\n  };\r\n\r\n  // 그리드 및 버튼 로딩 제어\r\n  const handleLoading = isLoading => {\r\n    setGridLoading(isLoading);\r\n    // setBtnSearchLoading(isLoading);\r\n  };\r\n\r\n  const columns = [\r\n    { \r\n      key: 'RN', \r\n      name: 'No', \r\n      formatter: cell => {\r\n        return <p className=\"text-center\">{`${cell.row.RN}`}</p>;\r\n      },\r\n      width:100\r\n    },\r\n    { \r\n      key: 'B_IDX', \r\n      name: 'B_IDX', \r\n      width:0\r\n    },\r\n    {\r\n      key: 'SUBJECT', \r\n      name: '제목',\r\n      width: '50%'\r\n    },\r\n    { \r\n      key: 'WRITER', \r\n      name: '작성자 ',\r\n      formatter: cell => {\r\n        return <p className=\"text-center\">{`${cell.row.WRITER}`}</p>;\r\n      },\r\n      width:200\r\n    },\r\n    { \r\n      key: 'WRITE_DATE', \r\n      name: '작성일자',\r\n      formatter: cell => {\r\n        return <p className=\"text-center\">{`${cell.row.WRITE_DATE}`}</p>;\r\n      },\r\n      width:150\r\n    }\r\n  ].map(c => ({ ...c, ...defaultColumnProperties }));\r\n\r\n  // 목록 조회\r\n  const getList = async () => {\r\n    try {\r\n      handleLoading(true);\r\n\r\n      // const params = {\r\n      //   menuId : 933,\r\n      //   id : 8,\r\n      //   bcIdx : 0,\r\n      //   page : 1,\r\n      //   // recordCountPerPage: 100,\r\n      //   categoryAllYn : 'Y'\r\n      // }\r\n      let searchParam;\r\n      let parmKeyword = '';\r\n\r\n      try {\r\n        if (searchForm){\r\n          searchParam = searchForm.getFieldsValue();\r\n        }\r\n\r\n        let { keyword } = searchParam;\r\n        parmKeyword = (keyword === undefined) ? '' : keyword;\r\n      }\r\n      catch(err){\r\n\r\n      }\r\n\r\n      const params = 'menuId=933&bsIdx=8&page=1&bcIdx=0&searchCondition=SUBJECT&searchKeyword=' + parmKeyword + '&categoryAllYn=Y';\r\n\r\n      const res = await axios.post('http://tw.ubstory.co.kr/bbs/ajax/boardList.do', params, axiosConfig)\r\n      // const res = await axios.post('http://eplatapi.ubstory.co.kr:8080/bbs/ajax/boardListTest.do', form, axiosConfig)\r\n      .then(res => res)\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n\r\n      if (res) {\r\n        const {resultList} = res.data;\r\n        // setGridData(boardList);\r\n        const data = resultList;\r\n        \r\n        // if (data && data.length > 0) {\r\n        //   let no = 1;\r\n\r\n        //   data.map(_data => {\r\n        //     const _item = _data;\r\n        //     _item.no = no; // 번호\r\n        //     no += 1;\r\n        //     return _item;\r\n        //   });\r\n        // }\r\n\r\n        setGridData(data);\r\n\r\n        setIsStart(false);\r\n\r\n      }\r\n    } catch(e){\r\n      console.log(e);\r\n    }\r\n    finally{\r\n      handleLoading(false);\r\n    }\r\n  }\r\n\r\n  // 상세 조회\r\n  const viewDetail = async (boardIdx) => {\r\n    handleLoading(true);\r\n\r\n    const params = 'bsIdx=8&bIdx=' + boardIdx + '&menuId=100';\r\n    const res = await axios.post(`http://tw.ubstory.co.kr/bbs/ajax/boardView.do`, params, axiosConfig)\r\n    if (res) {\r\n      const { result } = res.data;\r\n      // result.REMARK = result.REMARK\r\n      form.setFieldsValue(result);\r\n      handleLoading(false);\r\n      console.log('data ========>', result);\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const body = form.getFieldsValue();\r\n      \r\n\r\n      const params = 'menuId=933&bsIdx=8&gno=0&page=1&NOTICE_YN=N&SDATE=&EDATE=&fileIdx=&imgStr=&WRITER=최고관리자' +\r\n                      '&bIdx=' + body.B_IDX + \r\n                      '&SUBJECT=' + body.SUBJECT + \r\n                      '&REMARK=' + body.REMARK;\r\n\r\n      const aConfig = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data;'\r\n        }\r\n      };\r\n    \r\n      const res = await axios.post('http://tw.ubstory.co.kr/bbs/boardWriteProc.do', params, axiosConfig)\r\n      .then(res => res)\r\n      .catch(function (error) {\r\n          console.log(error);\r\n      });\r\n\r\n      if (res) {\r\n        getList();\r\n      }\r\n    }\r\n    catch(err){\r\n\r\n    }\r\n  }\r\n\r\n  const toggle = () => {\r\n    setCollapsed(!collapsed);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getList();\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Layout.Sider className=\"sider\" trigger={null} collapsible collapsed={collapsed}>\r\n        <h1 className=\"logo\">\r\n          <a href=\"#\"><i>s</i><span>SampleGrid</span></a>\r\n        </h1>\r\n        <h2 className=\"sr-only\">네비게이션</h2>\r\n        <Menu className=\"menu\" theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n          <Menu.Item key=\"5\">\r\n            <Link to=\"/sampleBoard\">\r\n              <Icon type=\"user\" />\r\n              <span>게시판</span>\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"6\">\r\n            <Link to=\"/sampleGrid\">\r\n              <Icon type=\"video-camera\" />\r\n              <span>자격신고내역</span>\r\n            </Link>\r\n          </Menu.Item>\r\n          {/* <Menu.Item key=\"7\">\r\n            <Icon type=\"upload\" />\r\n            <span>nav 3</span>\r\n          </Menu.Item>\r\n          <SubMenu\r\n            key=\"sub1\"\r\n            title={\r\n              <span>\r\n                <MailOutlined />\r\n                <span>Sub Menu</span>\r\n              </span>\r\n            }\r\n          >\r\n            <Menu.Item key=\"1\">Option 1</Menu.Item>\r\n            <Menu.Item key=\"2\">Option 2</Menu.Item>\r\n          </SubMenu> */}\r\n        </Menu>\r\n      </Layout.Sider>\r\n      <Layout>\r\n        <Layout.Header class=\"header\">\r\n          <Icon \r\n            className=\"trigger\"\r\n            type={collapsed ? 'menu-unfold' : 'menu'}\r\n            // type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\r\n            onClick={toggle}\r\n          />\r\n          <div className=\"etc-menu d-none d-lg-inline-block\">\r\n            <span>이 프로그램은 참고용으로 제작한 템플릿입니다.</span>\r\n          </div>\r\n        </Layout.Header>\r\n        <Layout.Content className=\"contents\">\r\n          <SearchForm setTransForm={form => setSearchForm(form)} searchBtnClick={getList} />\r\n          <h3>게시판 목록</h3>\r\n          <Spin spinning={false} isClass={false}>\r\n          <HIRAGrid\r\n            columns={columns}\r\n            rows={gridData}\r\n            // rowGetter={i => gridData[i]}\r\n            rowsCount={gridData.length}\r\n            minHeight={GRID_HEIGHT}\r\n            onRowClick={onCellSelected}\r\n            enableCellAutoFocus={false}\r\n            emptyRowsView={isStart ? LoadingRowsView : EmptyRowsView}\r\n            onGridSort={(sortColumn, sortDirection) => setGridData(sortRows(gridData, sortColumn, sortDirection))}\r\n          />\r\n          </Spin>\r\n\r\n          <h3 className=\"mt-35\">게시판 상세</h3>\r\n          <Spin spinning={gridLoading} isClass={false}>\r\n          <Form {...formItemLayout} className=\"wrap-form\">\r\n            <Row gutter={20}>\r\n              <Col xs={24}>\r\n                <Form.Item label=\"제목\">\r\n                  {getFieldDecorator('SUBJECT', {\r\n                    rules: [{ required: true, message: '' }],\r\n                  })(\r\n                    <Input placeholder='제목을 입력하세요.' maxLength={50} />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24}>\r\n                <Form.Item label=\"내용\">\r\n                  {getFieldDecorator('REMARK', {\r\n                    rules: [{ required: false, message: '' }],\r\n                  })(\r\n                    <TextArea rows={5} />,\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} className=\"text-right btn-area pt-20 pr-20\">\r\n                <Form.Item>{getFieldDecorator('B_IDX', { initialValue: '' })(<Input type=\"hidden\" />)}</Form.Item>\r\n                <Button htmlType=\"submit\">\r\n                  신규등록\r\n                </Button>\r\n                <Button type=\"danger\" htmlType=\"submit\">\r\n                  삭제\r\n                </Button>\r\n                <Button type=\"primary\" htmlType=\"submit\" onClick={handleSubmit}>\r\n                  저장\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          </Spin>\r\n        </Layout.Content>\r\n        <Footer/>\r\n      </Layout>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default (Form.create()(BoardSample));\r\n","// Components/Routes.js\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport sampleGrid from \"./pages/sampleGrid\";\r\nimport sampleBoard from \"./pages/sampleBoard\";\r\n\r\nexport default () => (\r\n  <Router>\r\n    <Route path=\"/\" component={sampleBoard} />\r\n    <Route path=\"/sampleBoard\" component={sampleBoard} />\r\n    <Route path=\"/sampleGrid\" component={sampleGrid} />\r\n  </Router>\r\n)","import React, { Component } from 'react';\n// import GridSample from './pages/sampleGrid';\nimport Routes from \"./Routes\";\n\nimport './resource/common.scss';\nimport 'antd/dist/antd.css';\nimport './resource/DefaultLayout.scss';\n\nclass App extends Component {\n  render () {\n    return (\n      <>\n        <Routes />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}